import java.util.Scanner;

//У вас есть прямоугольник n × m. Вы закрашиваете в нем максимально возможный по площади
//        квадрат таким образом, чтобы незакрашенная часть осталась связанным прямоугольником. После
//        этого вы берете новое ведро с краской и продолжаете закрашивание оставшейся части вышеописанным способом. Сколько ведер с краской вам потребуется?
//        Например, если у вас есть прямоугольник 3 × 4, то в нем можно закрасить квадрат 3 × 3 таким
//        образом, что оставшаяся часть займет прямоугольник размером 3×1, который получится закрасить
//        тремя квадратами. На весь процесс понадобится четыре ведра с краской.
//        Формат входных данных
//        Даны два натуральных числа n, m (1 6 n, m 6 1018). Обратите внимание, что вам понадобится
//        64-битный тип данных для ввода.
//        Формат выходных данных
//        Выведите одно число — колчество ведер с краской.

public class Main {
    private static long SquareCount(long n,long m) {
        long res = 0;
        n -= m;
        res ++;
        while (n != 1 || m!= 1) {
            if(n == 1) {
                res += m;
                return res;
            } else if (m == 1) {
                res += n;
                return res;
            } else if (n == m) {
                res ++;
                return  res;
            } else {
                if(n > m) {
                    n -= m;
                    res ++;
                }else if(m > n) {
                    m -= n;
                    res ++;
                }
            }
        }
        return  res;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        long n = sc.nextLong();
        long m = sc.nextLong();
        System.out.println(SquareCount(n,m));
    }
}
